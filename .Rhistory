result <- rpubsUpload(title='Modality exclusivity norms for 747 properties 
and concepts in Dutch: a replication of English',htmlFile=
'norms.html',method=getOption('rpubs.upload.method','auto'))
?rpubsUpload
rpubsUpload('Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English', 'norms.html', id = NULL, properties = list(comments=NA), 
    method = getOption("rpubs.upload.method", "auto"))
rpubsUpload('Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English', 'norms.html', id = NULL, properties = list(), 
    method = getOption("rpubs.upload.method", "auto"))
result <- rpubsUpload("Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English", "norms.html")
if (!is.null(result$continueUrl)) 
    browseURL(result$continueUrl) else stop(result$error)
kjnkans <- rpubsUpload("Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English", "norms.html")
if (!is.null(result$continueUrl)) 
    browseURL(result$continueUrl) else stop(result$error)
kjnkans <- rpubsUpload("Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English", "norms.html")
if (!is.null(result$continueUrl)) 
    browseURL(result$continueUrl) else stop(result$error))
kjnkans <- rpubsUpload("Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English", "norms.html")
if (!is.null(result$continueUrl)) 
    browseURL(result$continueUrl) else stop(result$error)
result <- rpubsUpload("Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English", "norms.html")
rpubsUpload('Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English', 
'C:/Users/Pablo/Dropbox/STUDIES/R/Experiment Data/responses/norms.html',
 id = NULL, properties = list(), 
    method = getOption("rpubs.upload.method", "auto"))
rpubsUpload('Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English', 
'C:/Users/Pablo/Dropbox/STUDIES/R/Experiment Data/responses/norms.html',
 id = NULL, properties = list(), 
    method = getOption("curl"))
rpubsUpload('Modality exclusivity norms for 747 properties and concepts in Dutch: 
a replication of English', 
'C:/Users/Pablo/Dropbox/STUDIES/R/Experiment Data/responses/norms.html',
 id = NULL, properties = list(), 
    method = getOption("auto"))
rpubsUpload('norms', 
'C:/Users/Pablo/Dropbox/STUDIES/R/Experiment Data/responses.html',
 id = NULL, properties = list(), 
    method = getOption("rpubs.upload.method", "auto"))
rpubsUpload('norms.html', 
'C:/Users/Pablo/Dropbox/STUDIES/R/Experiment Data/responses.html',
 id = NULL, properties = list(), 
    method = getOption("rpubs.upload.method", "auto"))
rpubsUpload('norms.html', 
'C:/Users/Pablo/Dropbox/STUDIES/R/Experiment Data/responses',
 id = NULL, properties = list(), 
    method = getOption("rpubs.upload.method", "auto"))
rpubsUpload('norms', 
'C:/Users/Pablo/Dropbox/STUDIES/R/Experiment Data/responses',
 id = NULL, properties = list(), 
    method = getOption("rpubs.upload.method", "auto"))
q()
a_concs<-concs[, c('a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9')]
psych::alpha(a_concs)
props$a10
rmarkdown::render("norms.R", c("pdf_document", "html_document"))
rmarkdown::render("norms.R", c("pdf_document", "html_document"))
readPNG('proppair_highres.png', native = T, info = FALSE)
library(png)
install.packages('png')
library(png)
readPNG('proppair_highres.png', native = T, info = FALSE)
plot(i1)
i1 = readPNG('proppair_highres.png', native = T, info = FALSE)
plot(i1)
i1 = readPNG('proppair_highres.png', native = F, info = FALSE)
plot(i1)
i1 = readPNG('proppair_highres.png', native = T, info = FALSE)
)
rmarkdown::render("norms.R", "pdf_document")
q()
q()
q()
q()
plot(Engprops)  # ! THE PLOT IS SHOWN BADLY ON HERE. PLEASE SEE THE SAVED PLOT
Engprops  # ! THE PLOT IS SHOWN BADLY ON HERE. PLEASE SEE THE SAVED PLOT
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
mat_lexicals_props <- as.matrix(props[c('letters', 'phonemes_DUTCHPOND', 'orth_neighbours_DUTCHPOND', 
'phon_neighbours_DUTCHPOND', 'freq_lg10CD_SUBTLEXNL', 'freq_lg10WF_SUBTLEXNL', 'freq_CELEX_lem',
'AoA_Brysbaertetal2014', 'concrete_Brysbaertetal2014')])
rcor.test(mat_lexicals_props, use='complete.obs')
rcor.test(mat_lexicals_props, use='complete.obs')
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
q()
source('NLprops_highres.png')
source('NLprops_highres')
source(NLprops_highres)
source(NLprops_highres.png)
read.png(NLprops_highres.png)
read.png('NLprops_highres.png')
library(png)
read.png('NLprops_highres.png')
read.PNG('NLprops_highres.png')
readPNG('NLprops_highres.png')
rmarkdown::render("norms.R", "pdf_document") # rendering for a few minutes
rmarkdown::render("norms.R", "word_document") # rendering for a few minutes
rmarkdown::render("norms.R", "word_document") # rendering for a few minutes
rmarkdown::render("norms.R", "word_document") # rendering for a few minutes
q()
q()
rmarkdown::render("norms.R", c("word_document", "pdf_document")) 
s
step_orth_neighbours_DUTCHPOND_concs_AIC <- stepAIC(fit_orth_neighbours_DUTCHPOND_
concs, direction="both")
step_orth_neighbours_DUTCHPOND_concs_AIC <- stepAIC(fit_orth_neighbours_DUTCHPOND_concs, direction="both")
step_orth_neighbours_DUTCHPOND_concs_AIC <- 
stepAIC(fit_orth_neighbours_DUTCHPOND_concs, direction="both")
fit_freq_lg10CD_SUBTLEXNL_concs <- lm(concs$s_freq_lg10CD_SUBTLEXNL ~ 
concs$s_Auditory + concs$s_Haptic + concs$s_Visual, data = concs)
rmarkdown::render("norms.R", c("word_document", "pdf_document")) 
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
q()
summary(complete.cases(props[complete.cases(props$Exclusivity),]$letters))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$phonemes_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$orth_neighbours_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$phon_neighbours_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$freq_lg10WF_SUBTLEXNL))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$freq_CELEX_lem))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$AoA_Brysbaertetal2014))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$concrete_Brysbaertetal2014))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]$letters))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_CELEX_lem))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$AoA_Brysbaertetal2014))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$concrete_Brysbaertetal2014))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_CELEX_lem))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$AoA_Brysbaertetal2014))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$concrete_Brysbaertetal2014))
summary$TRUE(complete.cases(concs[complete.cases(concs$Exclusivity),]
summary$$TRUE(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))$$TRUE
$phonemes_DUTCHPOND))$TRUE
$phonemes_DUTCHPOND)$$TRUE)
$phonemes_DUTCHPOND)$TRUE)
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_CELEX_lem))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$AoA_Brysbaertetal2014))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$concrete_Brysbaertetal2014))
complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
nrow(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
is.na(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters))
which(complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters)))
str(complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters)))
summary(complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters)))
describe(complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters)))
n(complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters)))
levels(complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters)))
summary(complete.cases(complete.cases(concs[complete.cases(concs$Exclusivity),]$letters)))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_CELEX_lem))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$AoA_Brysbaertetal2014))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$concrete_Brysbaertetal2014))
corrs_concs
corrs_concs
corrs_props
summary(complete.cases(props[complete.cases(props$Exclusivity),]$letters))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_CELEX_lem))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$AoA_Brysbaertetal2014))
summary(complete.cases(props[complete.cases(props$Exclusivity),]
$concrete_Brysbaertetal2014))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$orth_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phon_neighbours_DUTCHPOND))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_CELEX_lem))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$AoA_Brysbaertetal2014))
summary(complete.cases(concs[complete.cases(concs$Exclusivity),]
$concrete_Brysbaertetal2014))
q()
library(stats)
library(ltm)
library(lattice)
library(psych)
library(car)
library(doBy)
library(contrast)
library(pastecs)
library(scales)
library(ggplot2)
library(psych)
library(reshape)
library(arules)
library(plyr)
library(RColorBrewer)
library(Rmisc)
library(corpcor)
library(GPArotation)
library(gdata)
library(QuantPsyc)
library(MASS)
library(qpcR)
library(dplyr)
library(plyr)
library(gtools)
library(Hmisc)
library(png)
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$concrete_Brysbaertetal2014))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$phon_neighbours_DUTCHPOND))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$phonemes_DUTCHPOND))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$phonemes_DUTCHPOND))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$orth_neighbours_DUTCHPOND))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$phon_neighbours_DUTCHPOND))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$freq_CELEX_lem))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$AoA_Brysbaertetal2014))
describe(complete.cases(props[complete.cases(props$Exclusivity),]
$concrete_Brysbaertetal2014))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$orth_neighbours_DUTCHPOND))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phon_neighbours_DUTCHPOND))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10CD_SUBTLEXNL))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_lg10WF_SUBTLEXNL))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$freq_CELEX_lem))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$AoA_Brysbaertetal2014))
describe(complete.cases(concs[complete.cases(concs$Exclusivity),]
$concrete_Brysbaertetal2014))
str(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
stat.desc(complete.cases(concs[complete.cases(concs$Exclusivity),]
$phonemes_DUTCHPOND))
describe(concs$phonemes_DUTCHPOND)
summary(concs$phonemes_DUTCHPOND)
stat.desc(concs$phonemes_DUTCHPOND)
stat.desc(concs$orth_neighbours_DUTCHPOND)
stat.desc(concs$phonemes_DUTCHPOND)$$M
stat.desc(concs$phonemes_DUTCHPOND)$M
stat.desc(concs$phonemes_DUTCHPOND$mean)
stat.desc(concs$phonemes_DUTCHPOND$$mean)
stat.desc(concs$phonemes_DUTCHPOND)$$mean
stat.desc(concs$phonemes_DUTCHPOND)$mean
stat.desc(concs$phonemes_DUTCHPOND)
stat.desc(concs$orth_neighbours_DUTCHPOND)
stat.desc(concs$Exclusivity)
stat.desc(concs$freq_lg10CD_SUBTLEXNL)
stat.desc(concs$freq_lg10WF_SUBTLEXNL)
stat.desc(concs$freq_CELEX_lem)
stat.desc(concs$AoA_Brysbaertetal2014)
stat.desc(concs$concrete_Brysbaertetal2014)
stat.desc(props$phonemes_DUTCHPOND)
stat.desc(props$orth_neighbours_DUTCHPOND)
stat.desc(props$Exclusivity)
stat.desc(props$freq_lg10CD_SUBTLEXNL)
stat.desc(props$freq_lg10WF_SUBTLEXNL)
stat.desc(props$freq_CELEX_lem)
stat.desc(props$AoA_Brysbaertetal2014)
stat.desc(props$concrete_Brysbaertetal2014)
stat.desc(props$letters)
stat.desc(concs$letters)
stat.desc(concs$phon_neighbours_DUTCHPOND)
stat.desc(props$phon_neighbours_DUTCHPOND)
q()
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
q()
library(doBy)
file4 <- read.csv('file4_gral.csv')
all
library(gdata)
library(QuantPsyc)
library(plyr)
library(gtools)
library(Hmisc)
library(png)
library(RColorBrewer)
install.packages('')
install.packages('stats')
install.packages('')
allNL = all[!all$main == '',]
all <- read.csv('all.csv')
allNL = all[!all$main == '',]
all[!all$main == '',]
str(all[!all$main == '',])
str(all[all$main == '',])
q()
q()
step_letters_props_AIC <- stepAIC(fit_letters_props, direction="both")
step_letters_props_F <- stepAIC(fit_letters_props, direction="both", test="F")
summary(fit_letters_props)
q()
q()
q()
q()
library(corpcor)
library(ltm)
library(lattice)
library(psych)
library(car)
library(doBy)
library(contrast)
library(pastecs)
library(scales)
library(ggplot2)
library(psych)
library(reshape)
install.packages("gdata")
install.packages("GPArotation")
install.packages("psych")
install.packages("GPArotation")
install.packages("psych")
install.packages("ggplot2")
install.packages("car")
install.packages("Rmisc")
install.packages("corpcor")
install.packages('contrast')
install.packages('doBy')
install.packages('ltm')
install.packages('MASS')
install.packages('QuantPsyc')
install.packages('qpcR')
install.packages('corpcor')
install.packages('lattice')
install.packages('car')
install.packages('pastecs')
install.packages('scales')
install.packages('reshape')
install.packages('arules')
library(psych)
library(car)
library(doBy)
library(contrast)
library(RColorBrewer)
library(png)
rcor.test(concs[, c('Auditory', 'Haptic', 'Visual', 'Exclusivity')], use = 
'complete.obs')
q()
q()
summaryBy(Haptic ~ main, data=concs, FUN=mean)
library(ltm)
library(lattice)
library(psych)
library(car)
library(doBy)
library(contrast)
library(pastecs)
library(scales)
library(ggplot2)
library(psych)
library(reshape)
library(arules)
library(plyr)
library(RColorBrewer)
library(Rmisc)
library(corpcor)
library(GPArotation)
library(gdata)
library(QuantPsyc)
library(MASS)
library(qpcR)
library(dplyr)
library(gtools)
library(Hmisc)
library(png)
# Calculate average percentange of unresponded items, i.e., unknown. Since there are 
summaryBy(Auditory ~ main, data=props, FUN=mean)
q()
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
library(markdown)
install.packages('markdown')
library(markdown)
# Run code below. If library error, just try running again
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
install.packages('rmarkdown')
library(markdown)
rmarkdown::render("norms.R", c("word_document", "pdf_document"))
q()
rmarkdown::render("norms.R", c("word_document"))
q()
install.packages('scales')
rmarkdown::render("norms.R", "word_document")
q()
q()
q()
q()
